<<<<<<< HEAD
<<<<<<< HEAD
1.改代码之前，使用git pull命令，可以刷新本地的项目。
git status 在本地查看自己更改了哪些部分
git add -A 将已经更改的内容提交到暂存区，包括文件内容修改(modified)以及新文件，但不包括删除的文件
git commit -m 提交，并加注释
git push把本地的更新上传到github上
2. 使用SSH方式连接github
git 可以在本地commit，不用考虑联网的存在
使用http，速度慢，每次都要输入口令。默认的git://使用ssh
ssh-keygen -t rsa ，连续三次回车（即不做任何输入）
检查是否已经有SSH Key cd ~/.ssh
将生成的public key直接粘贴过去即可。
3. git的分支操作是独立的，在本地如果在这个分支新建的文件，更改的文件，对其他分支是不可见的。而push时也是分支对分支，以分支为单位。push是将本地分支与远程分支合并，与暂存区没有关系。
git checkout -b iss53 建立分支/切换分支
git merge iss53 分支合并
git branch -r -d origin/branch-name
git branch -d iss53
git push origin :branch-name //删除远程分支
#本地git仓库关联GitHub仓库 
git remote add origin git@github.com:han1202012/TabHost_Test.git
git remote remove origin 取消连接
#提交到GitHub中 
git push -u origin master
======
>>>>>>> test_code
=======
This is rebuilt by test_code branch
>>>>>>> test_code
https://backlog.com/git-tutorial/tw/reference/
Git 撤销事情
在未进行git push前的所有操作，都是在“本地仓库”中执行的。我们暂且将“本地仓库”的代码还原操作叫做“撤销”！
文件被修改了，但未执行git add操作（working tree内撤销）
git checkout fileName
git checkout .
同时对多个文件执行了git add操作，但本次只想提交其中一部分文件

$ git add *
$ git status
# 取消暂存
$ git reset HEAD <filename>
修改的文件已被git commit，但想再次修改不再产生新的Commit

# 修改最后一次提交 
$ git add sample.txt
$ git commit --amend -m"说明"
已在本地进行了多次git commit操作，现在想撤销到其中某次Commit

git reset [--hard|soft|mixed|merge|keep] [commit|HEAD]